name: Fly Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  PYTHON_VERSION: "3.11"
  PNPM_VERSION: "9.9.0"

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install \
            "fastapi>=0.115,<1.0" \
            "uvicorn[standard]>=0.30,<1.0" \
            "pydantic>=2.7,<3.0" \
            "httpx>=0.27,<1.0" \
            "supabase>=2.22,<3.0" \
            "qdrant-client>=1.9,<2.0" \
            "apscheduler>=3.10,<4.0" \
            "openai>=1.40,<3.0" \
            "anthropic>=0.34,<1.0" \
            "python-dotenv>=1.0,<2.0" \
            pytest pytest-asyncio schemathesis respx

      - name: Run pytest
        working-directory: backend
        run: |
          pytest --maxfail=1 --disable-warnings -q || [[ $? == 5 ]]

  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: frontend/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: frontend
        run: pnpm install

      - name: Run unit tests
        working-directory: frontend
        run: pnpm test -- --run --passWithNoTests

  deploy:
    needs:
      - backend-tests
      - frontend-tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl deploy --remote-only
